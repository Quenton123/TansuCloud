services:
  tansucloud.gateway:
    image: ${DOCKER_REGISTRY-}tansucloudgateway
    build:
      context: ./TansuCloud.Gateway
      dockerfile: Dockerfile
    depends_on: []

  tansucloud.identity:
    image: ${DOCKER_REGISTRY-}tansucloudidentity
    build:
      context: ./TansuCloud.Identity
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - NPGSQL__HOST=db
      - NPGSQL__PORT=5432
      - NPGSQL__DATABASE=tansucloud
      - NPGSQL__USERNAME=app_user
      - NPGSQL__PASSWORD=${NPGSQL__PASSWORD}
    depends_on:
      - db

  db:
    image: citusdata/citus:latest
    environment:
      - POSTGRES_PASSWORD=${PGPASSWORD}
      - NPGSQL__PASSWORD=${NPGSQL__PASSWORD}
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    command: ["redis-server", "--appendonly", "yes"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:latest
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  qdrant:
    image: qdrant/qdrant:latest
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:6333/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:9090/-/healthy || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 3

  grafana:
    image: grafana/grafana:latest
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD:-admin}
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:3000/api/health || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 3

volumes:
  db-data:
